add_expense_template = """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <title>Add Expense</title>
    <style>
        .conversion-info {
            font-size: 0.9em;
            color: #666;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <a href="/dashboard" class="btn btn-secondary mb-3"><i class="fas fa-arrow-left"></i> Back to Dashboard</a>
        <div class="card p-4 text-center shadow-lg mx-auto" style="max-width: 600px;">
            <h2 class="mb-3">Add Expense</h2>
            <form method="POST" action="/add_expense" class="w-100" id="expenseForm">
                <div class="mb-3">
                    <label class="form-label">Amount</label>
                    <div class="input-group">
                        <input type="number" name="amount" id="amount" class="form-control" placeholder="Enter amount" required step="0.01" oninput="updateConversion()">
                        <select name="currency" id="currency" class="form-control" style="max-width: 120px;" onchange="updateConversion()">
                            <option value="INR">INR (₹)</option>
                            <option value="USD">USD ($)</option>
                            <option value="EUR">EUR (€)</option>
                            <option value="GBP">GBP (£)</option>
                            <option value="JPY">JPY (¥)</option>
                        </select>
                    </div>
                    <div id="conversionInfo" class="conversion-info"></div>
                    <script>
                    async function updateConversion() {
                        const amount = document.getElementById('amount').value;
                        const currency = document.getElementById('currency').value;
                        if (amount && currency !== 'INR') {
                            try {
                                const response = await fetch(`/convert_currency/${currency}/INR/${amount}`);
                                const data = await response.json();
                                if (data.result) {
                                    document.getElementById('conversionInfo').innerHTML =
                                        `${amount} ${currency} = ₹${data.result.toFixed(2)} INR (Rate: 1 ${currency} = ₹${data.rate.toFixed(4)})`;
                                }
                            } catch (error) {
                                console.error('Error:', error);
                            }
                        } else {
                            document.getElementById('conversionInfo').innerHTML = '';
                        }
                    }
                    </script>
                </div>
                <div class="mb-3">
                    <label class="form-label">Select Group</label>
                    <select name="group_name" class="form-control" id="groupSelect">
                        {% for group_name, members in groups.items() %}
                            {% if username in members %}
                                <option value="{{ group_name }}" data-members='{{ members|tojson|safe }}'>{{ group_name }}</option>
                            {% endif %}
                        {% endfor %}
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Upload Receipt</label>
                    <div class="input-group">
                        <input type="file" class="form-control" id="receiptUpload" accept="image/*,.pdf" capture="camera">
                        <button type="button" class="btn btn-info" onclick="scanReceipt()">Scan Receipt</button>
                    </div>
                    <div id="scanResults" class="mt-2"></div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Description</label>
                    <input type="text" name="description" id="description" class="form-control" placeholder="Enter description" required>
                </div>
                <script>
                    async function scanReceipt() {
                        const fileInput = document.getElementById('receiptUpload');
                        const resultsDiv = document.getElementById('scanResults');
                        const amountInput = document.getElementById('amount');
                        const descriptionInput = document.getElementById('description');

                        if (!fileInput.files.length) {
                            alert('Please select a receipt image first');
                            return;
                        }

                        const formData = new FormData();
                        formData.append('receipt', fileInput.files[0]);

                        resultsDiv.innerHTML = '<div class="alert alert-info">Scanning receipt...</div>';

                        try {
                            const response = await fetch('/scan_receipt', {
                                method: 'POST',
                                body: formData
                            });

                            const data = await response.json();

                            if (response.ok) {
                                const validationClass = data.validation.valid ? 'alert-success' : 'alert-warning';
                                const validationStatus = data.validation.valid ? 'Valid Receipt' : 'Invalid Receipt';
                                resultsDiv.innerHTML = `
                                    <div class="alert ${validationClass}">
                                        <p><strong>Merchant:</strong> ${data.merchant || 'Not found'}</p>
                                        <p><strong>Amount:</strong> ${data.amount || 'Not found'}</p>
                                        <p><strong>Status:</strong> ${validationStatus}</p>
                                        <p><strong>Confidence Score:</strong> ${data.validation.confidence_score.toFixed(1)}%</p>
                                    </div>`;

                                if (data.amount) {
                                    amountInput.value = data.amount;
                                }
                                if (data.merchant) {
                                    descriptionInput.value = data.merchant;
                                }
                            } else {
                                resultsDiv.innerHTML = `<div class="alert alert-danger">Error: ${data.error}</div>`;
                            }
                        } catch (error) {
                            resultsDiv.innerHTML = `<div class="alert alert-danger">Error scanning receipt: ${error.message}</div>`;
                        }
                    }
                </script>
                <div class="mb-3">
                    <label class="form-label">Split Type</label>
                    <select name="split_type" class="form-control" id="splitType">
                        <option value="EQUALLY">Equally</option>
                        <option value="PERCENTAGE">Percentage</option>
                        <option value="SHARE">Share</option>
                    </select>
                    <small class="form-text text-muted">Select "Percentage" to enter custom percentages for each member</small>
                </div>
                <div id="percentageInputs" style="display: none;">
                    <h5 class="mb-3">Percentage Split</h5>
                    <div id="memberPercentages"></div>
                    <div class="text-danger" id="percentageError"></div>
                </div>
                <button type="submit" class="btn btn-primary w-100 mt-3">Add Expense</button>
            </form>
        </div>
    </div>
    <script>
        const splitType = document.getElementById('splitType');
        const percentageInputs = document.getElementById('percentageInputs');
        const memberPercentages = document.getElementById('memberPercentages');
        const groupSelect = document.getElementById('groupSelect');
        const expenseForm = document.getElementById('expenseForm');
        const percentageError = document.getElementById('percentageError');

        function updatePercentageInputs() {
            if (splitType.value === 'PERCENTAGE') {
                percentageInputs.style.display = 'block';
                try {
                    const membersData = groupSelect.selectedOptions[0].getAttribute('data-members');
                    const members = JSON.parse(membersData);
                    const defaultPercentage = (100 / members.length).toFixed(2);

                    memberPercentages.innerHTML = `
                        <p class="text-info mb-3">Enter percentage for each member (total must equal 100%)</p>
                        <div class="row">
                            ${members.map(member => `
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">${member}</label>
                                    <div class="input-group">
                                        <input type="number"
                                               name="percentage_${member}"
                                               class="form-control percentage-input"
                                               placeholder="Enter percentage"
                                               min="0"
                                               max="100"
                                               step="0.01"
                                               value="${defaultPercentage}"
                                               oninput="validatePercentages()"
                                               required>
                                        <div class="input-group-append">
                                            <span class="input-group-text">%</span>
                                        </div>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                        <div class="mt-3 alert alert-info">
                            <strong>Total: <span id="percentageTotal">${(defaultPercentage * members.length).toFixed(2)}</span>%</strong>
                        </div>
                    `;
                    validatePercentages();
                } catch (error) {
                    console.error('Error parsing members:', error);
                    memberPercentages.innerHTML = '<div class="alert alert-danger">Error loading members</div>';
                }
            } else {
                percentageInputs.style.display = 'none';
            }
        }

        function validatePercentages() {
            const inputs = document.querySelectorAll('.percentage-input');
            let total = 0;
            inputs.forEach(input => {
                const value = parseFloat(input.value || 0);
                if (!isNaN(value)) {
                    total += value;
                }
            });

            total = Math.round(total * 100) / 100; // Round to 2 decimal places
            document.getElementById('percentageTotal').textContent = total;

            if (total !== 100) {
                percentageError.textContent = `Total percentage must be 100%. Current total: ${total}%`;
                return false;
            } else {
                percentageError.textContent = '';
                return true;
            }
        }

        splitType.addEventListener('change', updatePercentageInputs);
        groupSelect.addEventListener('change', updatePercentageInputs);

        expenseForm.addEventListener('submit', function(e) {
            if (splitType.value === 'PERCENTAGE') {
                const inputs = document.querySelectorAll('.percentage-input');
                let total = 0;
                inputs.forEach(input => {
                    total += parseFloat(input.value || 0);
                });

                if (total !== 100) {
                    e.preventDefault();
                    percentageError.textContent = `Total percentage must be 100%. Current total: ${total}%`;
                } else {
                    percentageError.textContent = '';
                }
            }
        });
    </script>
</body>
</html>
"""